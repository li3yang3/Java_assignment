/*
Scenario : Booking an Airbnb

Description : A tourist wants to book a house on Airbnb app.

Author:Yang Li
NEUID:001253037

Objects (with Behaviors and State): 
	Object : tourist
		State : name, accountID
		Behavior : visitApp(), searchARoom(), orderARoom(), payRoomCharge()
	
	
	Object : tourapp
		State : Collection of Available Rooms
		Behavior : displayRooms(),  acceptPaymentFromTourist(), sendConfirmationToTourist()
	
	Object : room
		State : name, price, address
		Behavior : getName(), getPrice() 
	
	Object : money
		state : amount	
*/

class Tourist{
	String name;
	Integer accountID;
	void visitApp(tourapp ta){}
	House searchARoom(Room rooms[]){}
	void orderARoom(Room room){}
	Money payRoomCharge(tourapp ta){}
	
	
}

class Tourapp{
        Room[] rooms;
        Room displayRooms(){}
	void acceptPaymentFromTourist(Tourist t, Money m){}
	void sendConfirmationToTourist(Tourist t){}
			
}

class House{
	String name;
	Float price;
	String address;
	String getName(){}
	Float getPrice(){}
	

}

class Money{
	Float amount;
}

class BookAirbnb{
	public static void main(String args[]){
	Tourapp airbnb = new Tourapp();
	
	Room harbourview = new Room();
	harbourview.name = "harbourview";
	harbourview.price = 320.0;
	Room mountainview = new Room();
	mountainview.name = "mountainview";
	mountainview.price = 270.0;
	Room[] rooms = {harbourview,mountainview};
	
	Customer allen = new Customer();
	allen.name = "allen";
	allen.accountID = "allengo";
	
	allen.visitApp(airbnb);
	Room[] rooms = airbnb.displayRooms();
	Room room = allen.searchARoom(rooms);
	allen.orderARoom(room);
	Money money = allen.payRoomCharge(airbnb);
	airbnb.acceptPaymentFromTourist(allen,money);
	airbnb.sendConfirmationToTourist(allen);

	}

}
