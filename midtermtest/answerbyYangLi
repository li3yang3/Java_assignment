1.
public class Solution {
    public int longestPalindrome(String s) {
        if(s == null || s.length() == 0){
             return 0;
        }
        int len = 0;
        HashMap<Character,Integer> hm = new HashMap<Character,Integer>();
        for(int i = 0; i < s.length(); i++){
            if(hm.containsKey(s.charAt(i))){
                hm.put(s.charAt(i),hm.get(s.charAt(i)) + 1 );
            }else{
                hm.put(s.charAt(i),1);
            }
            if(hm.get(s.charAt(i)) == 2){
                len += hm.get(s.charAt(i));
                hm.remove(s.charAt(i));
            }
        }
        return !hm.isEmpty() ? len + 1 : len;
    }
}

2.


3.
public class Solution {
    public int titleToNumber(String s) {
        if(s == null || s.length() == 0){
            return 0;
        }
        int sum = 0;
        int curr = 1;
        for(int i = s.length() - 1; i >= 0 ;i--){
            sum = sum + (s.charAt(i) - 'A' + 1) * curr;
            curr *= 26;
        }
        return sum;
    }
}
